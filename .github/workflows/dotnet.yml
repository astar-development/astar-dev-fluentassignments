name: .NET

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build
    runs-on: windows-latest
    steps:
    - name: Set up JDK
      uses: actions/setup-java@v4.4.0
      with:
        java-version: 17
        distribution: 'zulu'
        
    - name: Checkout
      uses: actions/checkout@v4.2.1
      with:
        fetch-depth: 0

    - name: Build
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      shell: powershell
      run: |
        dotnet build --configuration Release

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.4.3
      with:
        name: fluentassignments-artifact
        path: **\AStar.Dev.FluentAssignments              
              
  analyse:
    name: Analyze
    runs-on: windows-latest
    steps:
    - name: Set up JDK
      uses: actions/setup-java@v4.4.0
      with:
        java-version: 17
        distribution: 'zulu'
        
    - name: Cache SonarCloud packages
      uses: actions/cache@v4.1.1
      with:
        path: ~\sonar\cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: Cache SonarCloud scanner
      id: cache-sonar-scanner
      uses: actions/cache@v4.1.1
      with:
        path: .\.sonar\scanner
        key: ${{ runner.os }}-sonar-scanner
        restore-keys: ${{ runner.os }}-sonar-scanner
        
    - name: Install SonarCloud scanner
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      shell: powershell
      run: |
        New-Item -Path .\.sonar\scanner -ItemType Directory
        dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
        
    - uses: actions/download-artifact@master
      with:
        name: fluentassignments-artifact
        path: /
    
    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      shell: powershell
      run: |
        dotnet tool install --global dotnet-coverage
        dotnet tool install --global dotnet-stryker
        .\.sonar\scanner\dotnet-sonarscanner begin /k:"astar-development_astar-dev-fluentassignments" /o:"astar-development" /d:sonar.scanner.scanAll=false /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
        dotnet stryker --break-at 99
        dotnet-coverage collect 'dotnet test --filter "FullyQualifiedName!~Acceptance.Tests"' -f xml -o 'coverage.xml'
        .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

    - name: Pack NuGet package
      if: github.ref == 'refs/heads/main'
      run: dotnet pack .\src\AStar.Dev.FluentAssignments\AStar.Dev.FluentAssignments.csproj

    - name: Push to NuGet
      if: github.ref == 'refs/heads/main'
      run: dotnet nuget push "**\AStar.Dev.FluentAssignments.*.nupkg" --api-key ${{secrets.nuget_api_key}} --skip-duplicate --source https://api.nuget.org/v3/index.json
  